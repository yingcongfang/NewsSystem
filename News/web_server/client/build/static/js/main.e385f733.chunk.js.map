{"version":3,"sources":["Auth/Auth.js","NewsCard/NewsCard.js","NewsPanel/NewsPanel.js","Base/Base.js","Login/LoginForm.js","Login/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","App/App.js","serviceWorker.js","index.js"],"names":["Auth","token","email","localStorage","setItem","getItem","console","log","removeItem","NewsCard","url","this","sendClickLog","window","open","getEmail","props","news","digest","request","Request","encodeURI","method","headers","Authorization","getToken","cache","fetch","_this","react_default","a","createElement","className","onClick","redirectToUrl","src","urlToImage","alt","title","description","source","id","reason","time","React","Component","NewsPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pageNum","totalPages","loadedAll","handleScroll","bind","assertThisInitialized","loadMoreNews","_","debounce","addEventListener","scrollY","pageYOffset","document","documentElement","scrollTop","innerHeight","body","offsetHeight","e","_this2","then","res","json","length","setState","concat","news_list","map","key","href","src_NewsCard_NewsCard","isUserAuthenticated","renderNews","withRouter","_ref","children","history","react_router_dom","to","deauthenticateUser","Base_this","push","LoginForm","onSubmit","onChange","errors","user","action","summary","type","name","htmlFor","password","value","LoginPage","processForm","changeUser","event","preventDefault","Accept","Content-Type","JSON","stringify","response","status","error","authenticateUser","replace","message","field","target","src_Login_LoginForm","SignUpForm","SignUpPage","confirm_password","src_SignUp_SignUpForm","App","src_Base_Base","react_router","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e385f733.chunk.js","sourcesContent":["class Auth {\n    /**\n     * Authenticate a user. Save token string in localStorage\n     * @param {string} token\n     * @param {string} email\n     */\n    static authenticateUser(token, email) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('email', email);\n    }\n\n    /**\n     * Check if a user is Authenticated, aka, if a token is saved in localStorage\n     * @returns {boolean}\n     */\n    static isUserAuthenticated() {\n        return localStorage.getItem('token') !== null;\n    }\n\n    /**\n     * Deauthenticate a user. Remove token and email from localStorage\n     */\n    static deauthenticateUser() {\n        let token = localStorage.getItem('token')\n        console.log(token)\n        localStorage.removeItem('token');\n        localStorage.removeItem('email');\n    }\n\n    /**\n     * Get a token value\n     * \n     * @returns {string}\n     */\n    static getToken() {\n        console.log(localStorage.getItem('token'));\n        return localStorage.getItem('token');\n    }\n\n    /**\n     * Get email\n     * \n     * @returns {string}\n     */\n    static getEmail() {\n        return localStorage.getItem('email');\n    }\n}\n\nexport default Auth;","import './NewsCard.css';\nimport React from 'react';\nimport Auth from '../Auth/Auth';\n\nclass NewsCard extends React.Component {\n    redirectToUrl(url) {\n        this.sendClickLog();\n        window.open(url, '_blank');\n    }\n\n    sendClickLog() {\n        let url = 'http://localhost:3000/news/userId/' + Auth.getEmail()\n                    + '/newsId/' + this.props.news.digest;\n\n        let request = new Request(encodeURI(url), {\n            method: 'POST',\n            headers: {\n                'Authorization': 'bearer ' + Auth.getToken(),\n            }, \n            cache: \"no-cache\"\n        });\n\n        fetch(request);\n    }\n    \n    render() {\n        return (\n            <div className='news-container' onClick={() => this.redirectToUrl(this.props.news.url)}>\n                <div className='card horizontal'>\n                    <div className='card-image'>\n                        <img src={this.props.news.urlToImage} alt='news' />\n                    </div>\n                    <div className='card-stacked'>\n                        <div className=\"card-content\">\n                            <span className='card-title'>{this.props.news.title}</span>\n                            <p>{this.props.news.description}</p>\n                        </div>\n                        <div className=\"card-action\">\n                            <div>\n                                {this.props.news.source.id != null && <div className='chip light-blue news-chip'>{this.props.news.source.id}</div>}\n                                {this.props.news.reason != null && <div className='chip light-green news-chip'>{this.props.news.reason}</div>}\n                                {this.props.news.time != null && <div className='chip amber news-chip'>{this.props.news.time}</div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewsCard;","import \"./NewsPanel.css\";\nimport React from 'react';\nimport NewsCard from '../NewsCard/NewsCard';\nimport Auth from '../Auth/Auth';\nimport _ from 'lodash';\n\nclass NewsPanel extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            news: null,\n            pageNum: 1,\n            totalPages: 1,\n            loadedAll: false\n        };\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadMoreNews();\n        this.loadMoreNews = _.debounce(this.loadMoreNews, 1000);\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll() {\n        let scrollY = window.scrollY || window.pageYOffset || document.documentElement.scrollTop;\n        if ((window.innerHeight + scrollY) >= (document.body.offsetHeight - 50)) {\n            console.log('Loading more news');\n            this.loadMoreNews();\n        }\n    }\n\n    loadMoreNews(e) {\n        if (this.state.loadedAll === true) {\n            return;\n        }\n        let url = 'http://localhost:3000/news/userId/' + Auth.getEmail() + '/pageNum/' + this.state.pageNum\n        let request = new Request(encodeURI(url), {\n            method: 'GET',\n            headers: {\n                'Authorization': 'bearer ' + Auth.getToken(),\n            },\n            cache: 'no-cache',\n        });\n        console.log(request);\n\n        fetch(request)\n            .then((res) => res.json())\n            .then((news) => {\n                if (!news || news.length === 0) {\n                    console.log(\"No news\");\n                    this.setState({ loadedAll: true });\n                }\n                this.setState({\n                    news: this.state.news ? this.state.news.concat(news) : news,\n                    pageNum: this.state.pageNum + 1\n                });\n            });\n    }\n\n    renderNews() {\n        let news_list = this.state.news.map(news => {\n            return (\n                <a className='list-group-item' key={news.digest} href='#'>\n                    <NewsCard news={news} />\n                </a>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {news_list}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        if (Auth.isUserAuthenticated()) {\n            if (this.state.news) {\n                return (\n                    <div>\n                        {this.renderNews()}\n                        {/* <div class=\"progress container\">\n                            <div class=\"indeterminate\"></div>\n                        </div> */}\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"progress\">\n                            <div className=\"indeterminate\"></div>\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <div className='container'>\n                    please login first\n                </div>\n            )\n        }\n    }\n}\n\nexport default NewsPanel;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Auth from '../Auth/Auth.js';\nimport './Base.css';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Base = ({ children, history }) => (\n    <div>\n        <nav className=\"nav-bar lighten-1\">\n            <div className=\"nav-wrapper\">\n                <Link to=\"/\" className=\"brand-logo\">&nbsp;&nbsp;NewsBoard</Link>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    {Auth.isUserAuthenticated() ?\n                        (<div>\n                            <li>{Auth.getEmail()}</li>\n                            <li>\n                                <a href='/' onClick={() => {\n                                    Auth.deauthenticateUser(() => this.props.history.push(\"/logout\"));\n                                }}>Log out</a>\n                            </li>\n                        </div>)\n                        : (<div>\n                            <li><Link to=\"/login\">Log in</Link></li>\n                            <li><Link to=\"/signup\">Sign up</Link></li>\n                        </div>)\n                    } \n                </ul>\n            </div>\n        </nav>\n        <br />\n        {children}\n    </div>\n);\n\nBase.propTypes = {\n    children: PropTypes.object.isRequired\n};\n\nexport default withRouter(Base);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoginForm.css';\n\nconst LoginForm = ({\n    onSubmit,\n    onChange,\n    errors,\n    user }) => (\n\t<div className=\"container\">\n    \t<div className=\"card-panel login-panel\">\n      \t\t<form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n        \t\t<h4 className=\"center-align\">Login</h4>\n        \t\t{errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n        \t\t<div className=\"row\">\n          \t\t\t<div className=\"input-field col s12\">\n            \t\t\t<input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n            \t\t\t<label htmlFor='email'>Email</label>\n          \t\t\t</div>\n        \t\t</div>\n        \t\t{errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n        \t\t<div className=\"row\">\n          \t\t\t<div className=\"input-field col s12\">\n            \t\t\t<input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n            \t\t\t<label htmlFor='password'>Password</label>\n          \t\t\t</div>\n\t\t\t\t</div>\n        \t\t{errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n        \t\t<div className=\"row right-align\">\n          \t\t\t<input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Log in'/>\n        \t\t</div>\n        \t\t<div className=\"row\">\n          \t\t\t<p className=\"right-align\"> New to Tap News?  <a href=\"/signup\">Sign Up</a></p>\n        \t\t</div>\n      \t\t</form>\n    \t</div>\n\t</div> \n);\n\nLoginForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terrors: PropTypes.object.isRequired,\n\tuser: PropTypes.object.isRequired\n}\n\nexport default LoginForm;\n\n","// Handle the login logic\nimport React, { Component } from 'react';\nimport Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: {},\n            user: {\n                email: '',\n                password: ''\n            }\n        };\n\n        this.processForm = this.processForm.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n    processForm(event) {\n        event.preventDefault()\n\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n        console.log('email:', email);\n        console.log('password:', password);\n\n        //post login data\n        fetch('http://localhost:3000/auth/login', {\n            method: 'POST',\n            cache: \"no-cache\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    error: {}\n                });\n                \n                response.json().then((json) => {\n                    console.log(json);\n                    Auth.authenticateUser(json.token, email);\n                    this.props.history.replace('/');\n                });\n            } else {\n                console.log('login failed');\n                response.json().then((json) => {\n                    const errors = json.errors ? json.errors : {};\n                    errors.summary = json.message;\n                    this.setState({errors});\n                });\n            }\n        });\n    }\n\n    changeUser(event) {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({ user });\n    }\n\n    render() {\n        return (\n            <LoginForm \n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                user={this.state.user}\n            />\n        );\n    }\n}\n\nexport default LoginPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SignUpForm.css';\n\nconst SignUpForm = ({\n    onSubmit,\n    onChange,\n    errors,\n    user\n}) => (\n    <div className=\"container\">\n        <div className=\"card-panel signup-panel\">\n            <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n                <h4 className=\"center-align\">Sign Up</h4>\n                {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"email\" type=\"email\" name=\"email\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"email\">Email</label>\n                    </div>\n                </div>\n                {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"password\" type=\"password\" name=\"password\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n                </div>\n                {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"confirm_password\" type=\"password\" name=\"confirm_password\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"confirm_password\">Confirm Password</label>\n                    </div>\n                </div>\n                <div className=\"row right-align\">\n                    <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Sign Up'/>\n                </div>\n                <div className=\"row\">\n                    <p className=\"right-align\"> Already have an account? <a href=\"/login\">Login</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n);\n\nSignUpForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nexport default SignUpForm;","import React, { Component } from 'react';\nimport SignUpForm from './SignUpForm';\n\nclass SignUpPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: {},\n            user: {\n                email: '',\n                password: '',\n                confirm_password: ''\n            }\n        }\n\n        this.processForm = this.processForm.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n    processForm(event) {\n        event.preventDefault();\n\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n        const confirm_password = this.state.user.confirm_password;\n\n        console.log('email: ', email);\n        console.log('password: ', password);\n        console.log('confirm_password: ', confirm_password);\n\n        if (password !== confirm_password) {\n            return;\n        }\n\n        fetch('http://localhost:3000/auth/signup', {\n            method: 'POST',\n            cache: 'no-cache',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    errors: {}\n                })\n                // Change current url to login\n                this.props.history.push('/login');\n            } else {\n                response.json().then(function(json){\n                    console.log(json);\n                    const errors = json.errors? json.errors: {};\n                    errors.summary = json.message;\n                    console.log(this.state.errors);\n                    this.setState({\n                        errors\n                    })\n                }.bind(this));\n            }\n        })\n    }\n\n    changeUser(event) {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({user});\n        console.log(this.state.user.password);\n        if (this.state.user.password !== this.state.user.confirm_password) {\n            const errors = this.state.errors;\n            errors.password = \"Password and Confirm Password don't match.\";\n            this.setState({ errors });\n        } else {\n            const errors = this.state.errors;\n            errors.password = '';\n            this.setState({ errors });\n        }\n    }\n\n    render() {\n        return (\n            <SignUpForm \n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                user={this.state.user}\n            />\n        );\n    }\n}\n\nexport default SignUpPage;","import \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../../node_modules/materialize-css/dist/js/materialize.min\";\n\nimport React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport './App.css';\nimport NewsPanel from \"../NewsPanel/NewsPanel\";\nimport Base from \"../Base/Base\";\nimport LoginPage from \"../Login/LoginPage\";\nimport SignUpPage from \"../SignUp/SignUpPage\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        \n          <Base>\n            <Switch>\n              <Route path=\"/login\" component={LoginPage} />\n              <Route path=\"/signup\" component={SignUpPage} />\n              <Route path=\"/\" component={NewsPanel} />\n            </Switch>\n          </Base>\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}