{"map":"{\"version\":3,\"sources\":[\"/Users/litianlun/Projects/News/web_server/client/src/NewsCard/NewsCard.js\",\"/Users/litianlun/Projects/News/web_server/client/src/NewsPanel/NewsPanel.js\",\"/Users/litianlun/Projects/News/web_server/client/src/App/App.js\",\"/Users/litianlun/Projects/News/web_server/client/src/serviceWorker.js\",\"/Users/litianlun/Projects/News/web_server/client/src/index.js\"],\"names\":[\"NewsCard\",\"url\",\"window\",\"open\",\"_this\",\"this\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"redirectToUrl\",\"props\",\"news\",\"src\",\"urlToImage\",\"alt\",\"title\",\"description\",\"source\",\"reason\",\"time\",\"React\",\"Component\",\"NewsPanel\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"loadMoreNews\",\"e\",\"_this2\",\"request\",\"Request\",\"method\",\"cache\",\"fetch\",\"then\",\"res\",\"json\",\"setState\",\"concat\",\"news_list\",\"map\",\"key\",\"digest\",\"href\",\"src_NewsCard_NewsCard\",\"renderNews\",\"id\",\"App\",\"src_NewsPanel_NewsPanel\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './NewsCard.css';\\n\\nimport React from 'react';\\n\\nclass NewsCard extends React.Component {\\n    redirectToUrl(url) {\\n        window.open(url, '_blank');\\n    }\\n\\n\\n    render() {\\n        return (\\n            <div className='news-container' onClick={() => this.redirectToUrl(this.props.news.url)}>\\n                <div className='card horizontal'>\\n                    <div className='card-image'>\\n                        <img src={this.props.news.urlToImage} alt='news' />\\n                    </div>\\n                    <div className='card-stacked'>\\n                        <div className=\\\"card-content\\\">\\n                            <span className='card-title'>{this.props.news.title}</span>\\n                            <p>{this.props.news.description}</p>\\n                        </div>\\n                        <div className=\\\"card-action\\\">\\n                            <div>\\n                                {this.props.news.source != null && <div className='chip light-blue news-chip'>{this.props.news.source}</div>}\\n                                {this.props.news.reason != null && <div className='chip light-green news-chip'>{this.props.news.reason}</div>}\\n                                {this.props.news.time != null && <div className='chip amber news-chip'>{this.props.news.time}</div>}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default NewsCard;\",\"import \\\"./NewsPanel.css\\\";\\nimport React from 'react';\\nimport NewsCard from '../NewsCard/NewsCard';\\n\\nclass NewsPanel extends React.Component {\\n    constructor() {\\n        super();\\n        this.state = {news: null};\\n    }\\n\\n    componentDidMount() {\\n        this.loadMoreNews();\\n    }\\n\\n    loadMoreNews(e) {\\n        let request = new Request('http://localhost:3000/news', {\\n            method: 'GET',\\n            cache: false\\n        });\\n\\n        fetch(request)\\n        .then((res) => res.json())\\n        .then((news) => {\\n            this.setState({\\n                news: this.state.news? this.state.news.concat(news) : news,\\n            })\\n        })\\n    }\\n\\n    renderNews() {\\n        const news_list = this.state.news.map(news => {\\n            return(\\n                <a className='list-group-item' key={news.digest} href='#'>\\n                    <NewsCard news={news} />\\n                </a>\\n            );\\n        });\\n\\n        return (\\n            <div className='container-fluid'>\\n                <div className='list-group'>\\n                    {news_list}\\n                </div>\\n            </div>\\n        )\\n    }\\n\\n    render() {\\n        if(this.state.news) {\\n            return (\\n                <div>\\n                    {this.renderNews()}\\n                </div>\\n            );\\n        } else {\\n            return (\\n                <div>\\n                    <div id='msg-app-loading'>\\n                        Loading...\\n                    </div>  \\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nexport default NewsPanel;\",\"import \\\"../../node_modules/materialize-css/dist/css/materialize.min.css\\\";\\nimport \\\"../../node_modules/materialize-css/dist/js/materialize.min\\\";\\n\\nimport React from \\\"react\\\";\\nimport './App.css';\\nimport NewsPanel from \\\"../NewsPanel/NewsPanel\\\";\\n\\nclass App extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <h1 className='title'>What's happening out there</h1>\\n        <div className='container'>\\n          <NewsPanel />\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,function(e,t,n){e.exports=n(20)},,,,,function(e,t,n){},,,function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var a=n(0),s=n.n(a),r=n(8),c=n.n(r),i=(n(14),n(1)),o=n(2),l=n(4),u=n(3),m=n(5),h=(n(15),n(16),n(17),n(18),n(19),function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"redirectToUrl\",value:function(e){window.open(e,\"_blank\")}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"news-container\",onClick:function(){return e.redirectToUrl(e.props.news.url)}},s.a.createElement(\"div\",{className:\"card horizontal\"},s.a.createElement(\"div\",{className:\"card-image\"},s.a.createElement(\"img\",{src:this.props.news.urlToImage,alt:\"news\"})),s.a.createElement(\"div\",{className:\"card-stacked\"},s.a.createElement(\"div\",{className:\"card-content\"},s.a.createElement(\"span\",{className:\"card-title\"},this.props.news.title),s.a.createElement(\"p\",null,this.props.news.description)),s.a.createElement(\"div\",{className:\"card-action\"},s.a.createElement(\"div\",null,null!=this.props.news.source&&s.a.createElement(\"div\",{className:\"chip light-blue news-chip\"},this.props.news.source),null!=this.props.news.reason&&s.a.createElement(\"div\",{className:\"chip light-green news-chip\"},this.props.news.reason),null!=this.props.news.time&&s.a.createElement(\"div\",{className:\"chip amber news-chip\"},this.props.news.time))))))}}]),t}(s.a.Component)),p=function(e){function t(){var e;return Object(i.a)(this,t),(e=Object(l.a)(this,Object(u.a)(t).call(this))).state={news:null},e}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){this.loadMoreNews()}},{key:\"loadMoreNews\",value:function(e){var t=this,n=new Request(\"http://localhost:3000/news\",{method:\"GET\",cache:!1});fetch(n).then(function(e){return e.json()}).then(function(e){t.setState({news:t.state.news?t.state.news.concat(e):e})})}},{key:\"renderNews\",value:function(){var e=this.state.news.map(function(e){return s.a.createElement(\"a\",{className:\"list-group-item\",key:e.digest,href:\"#\"},s.a.createElement(h,{news:e}))});return s.a.createElement(\"div\",{className:\"container-fluid\"},s.a.createElement(\"div\",{className:\"list-group\"},e))}},{key:\"render\",value:function(){return this.state.news?s.a.createElement(\"div\",null,this.renderNews()):s.a.createElement(\"div\",null,s.a.createElement(\"div\",{id:\"msg-app-loading\"},\"Loading...\"))}}]),t}(s.a.Component),d=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"div\",null,s.a.createElement(\"h1\",{className:\"title\"},\"What's happening out there\"),s.a.createElement(\"div\",{className:\"container\"},s.a.createElement(p,null)))}}]),t}(s.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(s.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[9,1,2]]]);","extractedComments":[]}