{"ast":null,"code":"var _jsxFileName = \"/Users/litianlun/Projects/News/web_server/client/src/Login/LoginPage.js\";\n// Handle the login logic\nimport React, { Component } from 'react';\nimport Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: {},\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n    this.processForm = this.processForm.bind(this);\n    this.changeUser = this.changeUser.bind(this);\n  }\n\n  processForm(event) {\n    event.preventDefault();\n    const email = this.state.user.email;\n    const password = this.state.user.password;\n    console.log('email:', email);\n    console.log('password:', password); //post login data\n\n    fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      cache: \"no-cache\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.state.user.email,\n        password: this.state.user.password\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          error: {}\n        });\n        response.json().then(json => {\n          console.log(json);\n          Auth.authenticateUser(json.token, email);\n          let token = localStorage.getItem('token');\n          console.log(token);\n          this.props.history.replace('/');\n        });\n      } else {\n        console.log('login failed');\n        response.json().then(json => {\n          const errors = json.errors ? json.errors : {};\n          errors.summary = json.message;\n          this.setState({\n            errors\n          });\n        });\n      }\n    });\n  }\n\n  changeUser(event) {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    return React.createElement(LoginForm, {\n      onSubmit: this.processForm,\n      onChange: this.changeUser,\n      errors: this.state.errors,\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/litianlun/Projects/News/web_server/client/src/Login/LoginPage.js"],"names":["React","Component","Auth","LoginForm","LoginPage","constructor","props","state","errors","user","email","password","processForm","bind","changeUser","event","preventDefault","console","log","fetch","method","cache","headers","body","JSON","stringify","then","response","status","setState","error","json","authenticateUser","token","localStorage","getItem","history","replace","summary","message","field","target","name","value","render"],"mappings":"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","sourcesContent":["// Handle the login logic\nimport React, { Component } from 'react';\nimport Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: {},\n            user: {\n                email: '',\n                password: ''\n            }\n        };\n\n        this.processForm = this.processForm.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n    processForm(event) {\n        event.preventDefault()\n\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n        console.log('email:', email);\n        console.log('password:', password);\n\n        //post login data\n        fetch('http://localhost:3000/auth/login', {\n            method: 'POST',\n            cache: \"no-cache\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    error: {}\n                });\n                \n                response.json().then((json) => {\n                    console.log(json);\n                    Auth.authenticateUser(json.token, email);\n                    let token = localStorage.getItem('token')\n                    console.log(token);\n                    this.props.history.replace('/');\n                });\n            } else {\n                console.log('login failed');\n                response.json().then((json) => {\n                    const errors = json.errors ? json.errors : {};\n                    errors.summary = json.message;\n                    this.setState({errors});\n                });\n            }\n        });\n    }\n\n    changeUser(event) {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({ user });\n    }\n\n    render() {\n        return (\n            <LoginForm \n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                user={this.state.user}\n            />\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}